{"ast":null,"code":"var _jsxFileName = \"/Users/mykronphotography/Documents/De\\u0301veloppeur Web Junior/React/React-Redux-Starter-Create-React-App-master/src/containers/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { fetchCountries, fetchRateExchange } from '../actions';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeCountry = e => {\n      const countryCode = e.target.value;\n\n      const country = _.find(this.props.countries, {\n        code: countryCode\n      });\n\n      this.props.fetchRateExchange();\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n  }\n\n  renderSelectCountries() {\n    return React.createElement(\"select\", {\n      onChange: e => this.onChangeCountry(e),\n      className: \"form-control search_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.countries.map(c => React.createElement(\"option\", {\n      key: c.code,\n      value: c.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, c.name)));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.renderSelectCountries());\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    countries: store.countriesReducer.countries\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchCountries,\n  fetchRateExchange\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/mykronphotography/Documents/DeÃÅveloppeur Web Junior/React/React-Redux-Starter-Create-React-App-master/src/containers/SearchBar.js"],"names":["React","Component","fetchCountries","fetchRateExchange","connect","_","SearchBar","onChangeCountry","e","countryCode","target","value","country","find","props","countries","code","componentWillMount","renderSelectCountries","map","c","name","render","mapStateToProps","store","countriesReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,YAAlD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAmBhCM,eAnBgC,GAmBdC,CAAC,IAAI;AACrB,YAAMC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA7B;;AACA,YAAMC,OAAO,GAAGP,CAAC,CAACQ,IAAF,CAAO,KAAKC,KAAL,CAAWC,SAAlB,EAA6B;AAACC,QAAAA,IAAI,EAAEP;AAAP,OAA7B,CAAhB;;AACA,WAAKK,KAAL,CAAWX,iBAAX;AACD,KAvB+B;AAAA;;AAChCc,EAAAA,kBAAkB,GAAG;AACnB,SAAKH,KAAL,CAAWZ,cAAX;AACD;;AAEDgB,EAAAA,qBAAqB,GAAI;AACvB,WACE;AAAQ,MAAA,QAAQ,EAAEV,CAAC,IAAI,KAAKD,eAAL,CAAqBC,CAArB,CAAvB;AAAgD,MAAA,SAAS,EAAC,yBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKM,KAAL,CAAWC,SAAX,CAAqBI,GAArB,CAAyBC,CAAC,IACxB;AAAQ,MAAA,GAAG,EAAEA,CAAC,CAACJ,IAAf;AAAqB,MAAA,KAAK,EAAEI,CAAC,CAACJ,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,CAAC,CAACC,IADL,CADF,CAFJ,CADF;AAWD;;AAODC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,qBAAL,EADH,CADF;AAKD;;AA9B+B;;AAgClC,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLT,IAAAA,SAAS,EAAES,KAAK,CAACC,gBAAN,CAAuBV;AAD7B,GAAP;AAGD,CAJD;;AAMA,MAAMW,kBAAkB,GAAG;AACzBxB,EAAAA,cADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAKA,eAAeC,OAAO,CAAEmB,eAAF,EAAmBG,kBAAnB,CAAP,CAA+CpB,SAA/C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { fetchCountries, fetchRateExchange } from '../actions'\nimport {connect} from 'react-redux'\nimport _ from 'lodash'\n\nclass SearchBar extends Component {\n  componentWillMount() {\n    this.props.fetchCountries()\n  }\n\n  renderSelectCountries () {\n    return (\n      <select onChange={e => this.onChangeCountry(e)} className=\"form-control search_bar\">\n        {\n          this.props.countries.map(c => (\n            <option key={c.code} value={c.code}>\n              {c.name}\n            </option>\n          ))\n        }\n      </select>\n    )\n  }\n\n  onChangeCountry = e => {\n    const countryCode = e.target.value\n    const country = _.find(this.props.countries, {code: countryCode})\n    this.props.fetchRateExchange()\n  }\n  render() {\n    return (\n      <form className=\"form-group\">\n        {this.renderSelectCountries()}\n      </form>\n    )\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    countries: store.countriesReducer.countries\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchCountries,\n  fetchRateExchange\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(SearchBar)"]},"metadata":{},"sourceType":"module"}