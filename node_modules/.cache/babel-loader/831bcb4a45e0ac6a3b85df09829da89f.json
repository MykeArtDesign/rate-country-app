{"ast":null,"code":"var _jsxFileName = \"/Users/mykronphotography/Documents/De\\u0301veloppeur Web Junior/React/React-Redux-Starter-Create-React-App-master/src/containers/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { fetchCountries } from '../actions';\nimport { connect } from 'react-redux';\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeCountry = e => {\n      console.log('onChange', e.target.value);\n    };\n  }\n\n  componentWillMount() {\n    this.props.fetchCountries();\n  }\n\n  renderSelectCountries() {\n    return React.createElement(\"select\", {\n      onChange: e => this.onChangeCountry(e),\n      className: \"form-control search_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.countries.map(c => React.createElement(\"option\", {\n      key: c.code,\n      value: c.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, c.name)));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.renderSelectCountries());\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    countries: store.countriesReducer.countries\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchCountries\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/mykronphotography/Documents/DeÃÅveloppeur Web Junior/React/React-Redux-Starter-Create-React-App-master/src/containers/SearchBar.js"],"names":["React","Component","fetchCountries","connect","SearchBar","onChangeCountry","e","console","log","target","value","componentWillMount","props","renderSelectCountries","countries","map","c","code","name","render","mapStateToProps","store","countriesReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAmBhCI,eAnBgC,GAmBdC,CAAC,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,CAAC,CAACG,MAAF,CAASC,KAAjC;AACD,KArB+B;AAAA;;AAChCC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWV,cAAX;AACD;;AAEDW,EAAAA,qBAAqB,GAAI;AACvB,WACE;AAAQ,MAAA,QAAQ,EAAEP,CAAC,IAAI,KAAKD,eAAL,CAAqBC,CAArB,CAAvB;AAAgD,MAAA,SAAS,EAAC,yBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKM,KAAL,CAAWE,SAAX,CAAqBC,GAArB,CAAyBC,CAAC,IACxB;AAAQ,MAAA,GAAG,EAAEA,CAAC,CAACC,IAAf;AAAqB,MAAA,KAAK,EAAED,CAAC,CAACC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,CAAC,CAACE,IADL,CADF,CAFJ,CADF;AAWD;;AAKDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,qBAAL,EADH,CADF;AAKD;;AA5B+B;;AA8BlC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,SAAS,EAAEO,KAAK,CAACC,gBAAN,CAAuBR;AAD7B,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAG;AACzBrB,EAAAA;AADyB,CAA3B;AAIA,eAAeC,OAAO,CAAEiB,eAAF,EAAmBG,kBAAnB,CAAP,CAA+CnB,SAA/C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { fetchCountries } from '../actions'\nimport {connect} from 'react-redux'\n\nclass SearchBar extends Component {\n  componentWillMount() {\n    this.props.fetchCountries()\n  }\n\n  renderSelectCountries () {\n    return (\n      <select onChange={e => this.onChangeCountry(e)} className=\"form-control search_bar\">\n        {\n          this.props.countries.map(c => (\n            <option key={c.code} value={c.code}>\n              {c.name}\n            </option>\n          ))\n        }\n      </select>\n    )\n  }\n\n  onChangeCountry = e => {\n    console.log('onChange', e.target.value)\n  }\n  render() {\n    return (\n      <form className=\"form-group\">\n        {this.renderSelectCountries()}\n      </form>\n    )\n  }\n}\nconst mapStateToProps = store => {\n  return {\n    countries: store.countriesReducer.countries\n  }\n}\n\nconst mapDispatchToProps = {\n  fetchCountries\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(SearchBar)"]},"metadata":{},"sourceType":"module"}